---
AWSTemplateFormatVersion: "2010-09-09"

Description: Automate provisioning of CodeBuild with CodePipeline CodeCommit and CodeDeploy.

Parameters:

  EmailAddress:
    Type: String
    Default: xxxxxxxxxxxxxxxx

  RepositoryBranch:
    Type: String
    Default: master

  RepositoryName: 
    Type: String
    Default: xxxxxxxxxxxxxxx

  TagKey:
    Type: String
    Default: Name

  TagValue:
    Type: String
    Default: CodeDeployEC2Tag

  Cluster:
    Type: String

  Service:
    Type: String  

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Params to Modify
        Parameters:
          - EmailAddress
          - EC2KeyPairName


Resources:

  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  MySNSTopic:
    Type: "AWS::SNS::Topic"
    Properties: 
      DisplayName: String
      Subscription:
        - Endpoint: !Ref EmailAddress
          Protocol: "email"
      TopicName: 
        Ref: AWS::StackName

  CodePipelineStack:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: App
              Configuration:
                BranchName: !Ref RepositoryBranch
                RepositoryName: !Ref RepositoryName 
              RunOrder: 1
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
            OutputArtifacts:
              - Name: BuildOutput
            InputArtifacts:
              - Name: App
            Configuration:
                ProjectName: !Ref CodeBuildProject
            RunOrder: 1
        - Name: Deploy
          Actions:
          - Name: Deploy
            ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
            InputArtifacts:
              - Name: BuildOutput
            Configuration:
                ClusterName: !Ref Cluster
#                NotificationArn: !Ref MySNSTopic
#                CustomData: !Sub 'Do you want to create a change set against the production stack and delete the ${!Ref: AWS::StackName} stack?'
                ServiceName: !Ref Service
                FileName: images.json
            RunOrder: 1

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              - Resource: 
                  - !Sub arn:aws:codecommit:us-west-2:xxxxxxxxxxxxx:reponame
                Effect: Allow
                Action:
                  - codecommit:*

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - pip install --upgrade pip
                - pip install --upgrade awscli
            pre_build:
              commands:
                - $(aws ecr get-login --no-include-email)
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
            build:
              commands:
                - docker build --tag "$IMAGE_URI" .
            post_build:
              commands:
                - docker push "$IMAGE_URI"
                - printf '[{"name":"simple-app","imageUri":"%s"}]' "$IMAGE_URI" > images.json
          artifacts:
            files: images.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildRole

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

